apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      priorityClassName: system-node-critical
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      serviceAccountName: {{ .Values.name }}
      hostNetwork: true
      tolerations:
      - operator: "Exists"
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}
        args:
        - --cloud-provider=aws
        - --secure-port={{ .Values.ports.healthcheck }}
        - --configure-cloud-routes=false
        - --v=2
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: {{ .Values.ports.healthcheck }}
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: {{ .Values.ports.healthcheck }}
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
